{
  "_args": [
    [
      {
        "raw": "topojson-server",
        "scope": null,
        "escapedName": "topojson-server",
        "name": "topojson-server",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/media/isaac/Data/electoral_map/data"
    ]
  ],
  "_from": "topojson-server@latest",
  "_id": "topojson-server@3.0.0",
  "_inCache": true,
  "_location": "/topojson-server",
  "_nodeVersion": "7.3.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/topojson-server-3.0.0.tgz_1490937311653_0.6286520296707749"
  },
  "_npmUser": {
    "name": "mbostock",
    "email": "mike@ocks.org"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "topojson-server",
    "scope": null,
    "escapedName": "topojson-server",
    "name": "topojson-server",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/topojson-server/-/topojson-server-3.0.0.tgz",
  "_shasum": "378e78e87c3972a7b5be2c5d604369b6bae69c5e",
  "_shrinkwrap": null,
  "_spec": "topojson-server",
  "_where": "/media/isaac/Data/electoral_map/data",
  "author": {
    "name": "Mike Bostock",
    "url": "https://bost.ocks.org/mike"
  },
  "bin": {
    "geo2topo": "bin/geo2topo"
  },
  "bugs": {
    "url": "https://github.com/topojson/topojson-server/issues"
  },
  "dependencies": {
    "commander": "2"
  },
  "description": "Convert GeoJSON to TopoJSON for smaller files and the power of topology!",
  "devDependencies": {
    "eslint": "3",
    "package-preamble": "0.0",
    "rollup": "0.41",
    "tape": "4",
    "topojson-client": "3",
    "uglify-js": "2"
  },
  "directories": {},
  "dist": {
    "shasum": "378e78e87c3972a7b5be2c5d604369b6bae69c5e",
    "tarball": "https://registry.npmjs.org/topojson-server/-/topojson-server-3.0.0.tgz"
  },
  "gitHead": "901ec6012a7ee6a36c86926e8d0b1d9a3d203d46",
  "homepage": "https://github.com/topojson/topojson-server",
  "keywords": [
    "topojson",
    "geojson"
  ],
  "license": "BSD-3-Clause",
  "main": "dist/topojson-server.js",
  "maintainers": [
    {
      "name": "mbostock",
      "email": "mike@ocks.org"
    }
  ],
  "module": "index",
  "name": "topojson-server",
  "optionalDependencies": {},
  "readme": "# TopoJSON Server\n\nThe **topojson-server** module provides tools for converting GeoJSON to [TopoJSON](https://github.com/topojson). See [How to Infer Topology](https://bost.ocks.org/mike/topology/) for details on how the topology is constructed.\n\nSee [shapefile](https://github.com/mbostock/shapefile) for converting ESRI shapefiles to GeoJSON, [ndjson-cli](https://github.com/mbostock/ndjson-cli) for manipulating newline-delimited JSON streams, [d3-geo-projection](https://github.com/d3/d3-geo-projection) for manipulating GeoJSON, and [topojson-client](https://github.com/topojson/topojson-client) for manipulating TopoJSON and converting it back to GeoJSON. See also [us-atlas](https://github.com/topojson/us-atlas) and [world-atlas](https://github.com/topojson/world-atlas) for pre-built TopoJSON.\n\n## Installing\n\nIf you use NPM, `npm install topojson-server`. Otherwise, download the [latest release](https://github.com/topojson/topojson-server/releases/latest). You can also load directly from [unpkg](https://unpkg.com). AMD, CommonJS, and vanilla environments are supported. In vanilla, a `topojson` global is exported:\n\n```html\n<script src=\"https://unpkg.com/topojson-server@3\"></script>\n<script>\n\nvar topology = topojson.topology({foo: geojson});\n\n</script>\n```\n\n[Try topojson-server in your browser.](https://tonicdev.com/npm/topojson-server)\n\n## API Reference\n\n<a name=\"topology\" href=\"#topology\">#</a> topojson.<b>topology</b>(<i>objects</i>[, <i>quantization</i>]) [<>](https://github.com/topojson/topojson-server/blob/master/src/topology.js \"Source\")\n\nReturns a TopoJSON topology for the specified [GeoJSON *objects*](http://geojson.org/geojson-spec.html#geojson-objects). The returned topology makes a shallow copy of the input *objects*: the identifier, bounding box, properties and coordinates of input objects may be shared with the output topology.\n\nIf a *quantization* parameter is specified, the input geometry is quantized prior to computing the topology, the returned topology is quantized, and its arcs are [delta-encoded](https://github.com/topojson/topojson-specification/blob/master/README.md#213-arcs). Quantization is recommended to improve the quality of the topology if the input geometry is messy (*i.e.*, small floating point error means that adjacent boundaries do not have identical values); typical values are powers of ten, such as 1e4, 1e5 or 1e6. See also [topojson.quantize](https://github.com/topojson/topojson-client/blob/master/README.md#quantize) to quantize a topology after it has been constructed, without altering the topological relationships.\n\n## Command-Line Reference\n\n### geo2topo\n\n<a name=\"geo2topo\" href=\"#geo2topo\">#</a> <b>geo2topo</b> [<i>options…</i>] [<i>name</i>=]<i>file</i>… [<>](https://github.com/topojson/topojson/blob/master/bin/geo2topo \"Source\")\n\nConverts one or more GeoJSON objects to an output topology. For example, to convert the us-states.json GeoJSON FeatureCollection to a TopologyJSON topology with the “states” object in us.json:\n\n```\ngeo2topo states=us-states.json > us.json\n```\n\nFor convenience, you can omit the object name and specify only the output *file* name; the object name will be the basename of the file, with the directory and extension removed. For example, to convert the states.json GeoJSON FeatureCollection to a TopologyJSON topology with the “states” object in us.json:\n\n```\ngeo2topo states.json > us.json\n```\n\nAny properties and identifiers of input [feature objects](https://tools.ietf.org/html/rfc7946#section-3.2) are propagated to the output. If you want to transform or filter properties, try [ndjson-cli](https://github.com/mbostock/ndjson-cli) as demonstrated in [Command-Line Cartography](https://medium.com/@mbostock/command-line-cartography-part-1-897aa8f8ca2c).\n\nSee also [topo2geo](https://github.com/topojson/topojson-client/blob/master/README.md#topo2geo).\n\n<a name=\"geo2topo_help\" href=\"#geo2topo_help\">#</a> geo2topo <b>-h</b>\n<br><a href=\"#geo2topo_help\">#</a> geo2topo <b>--help</b>\n\nOutput usage information.\n\n<a name=\"geo2topo_version\" href=\"#geo2topo_version\">#</a> geo2topo <b>-V</b>\n<br><a href=\"#geo2topo_version\">#</a> geo2topo <b>--version</b>\n\nOutput the version number.\n\n<a name=\"geo2topo_newline_delimited\" href=\"#geo2topo_newline_delimited\">#</a> geo2topo <b>-n</b>\n<br><a href=\"#geo2topo_newline_delimited\">#</a> geo2topo <b>--newline-delimited</b>\n\nOutput [newline-delimited JSON](http://ndjson.org/), with one feature per line.\n\n<a name=\"geo2topo_in\" href=\"#geo2topo_in\">#</a> geo2topo <b>-i</b> <i>file</i>\n<br><a href=\"#geo2topo_in\">#</a> geo2topo <b>--in</b> <i>file</i>\n\nSpecify the input TopoJSON file name. Defaults to “-” for stdin.\n\n<a name=\"geo2topo_list\" href=\"#geo2topo_list\">#</a> geo2topo <b>-l</b>\n<br><a href=\"#geo2topo_list\">#</a> geo2topo <b>--list</b>\n\nList the names of the objects in the input topology, and then exit. For example, this:\n\n```\ngeo2topo -l < us.json\n```\n\nWill output this:\n\n```\ncounties\nstates\nnation\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/topojson/topojson-server.git"
  },
  "scripts": {
    "postpublish": "git push && git push --tags && zip -j dist/topojson-server.zip -- LICENSE.md README.md dist/topojson-server.js dist/topojson-server.min.js",
    "prepublish": "npm run test && uglifyjs --preamble \"$(preamble)\" -cm -o dist/topojson-server.min.js -- dist/topojson-server.js",
    "pretest": "rm -rf dist && mkdir dist && rollup --banner \"$(preamble)\" -f umd -n topojson -o dist/topojson-server.js -- index.js && rollup -f cjs -o build/topojson-internals.js -- test/internals.js",
    "test": "tape 'test/**/*-test.js' && eslint index.js src"
  },
  "version": "3.0.0"
}
